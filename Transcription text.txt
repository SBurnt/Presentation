SLIDE 1
Hello everyone, my name is Siarhei. Today we talk about HTML. Let's see what it is let's look at a couple of examples. Let's get down to collecting our topic today.

SLIDE 2.1
What is HTML?
HTML (Hypertext Markup Language) is the code that is used to structure a web page and its content. For example, content could be structured within a set of paragraphs, a list of bulleted points, or using images and data tables. 

SLIDE 2.2
So what is HTML, really?
HTML is not a programming language; it is a markup language that defines the structure of your content. HTML consists of a series of elements, which we use to enclose, or wrap, different parts of the content to make it appear a certain way, or act a certain way. The enclosing tags can make a word or image hyperlink to somewhere else, can italicize words, and can make font bigger or smaller, and so on.  For example, take the following line of content: 
My cat is very grumpy
If we wanted the line to stand by itself, we could specify that it is a paragraph by enclosing it in paragraph tags:
<p>My cat is very grumpy</p>

SLIDE 3.1
Anatomy of an HTML element
Let's explore this paragraph element a bit further.
 
The main parts of our element are:
1. The opening tag: This consists of the name of the element (in this case, p), wrapped in opening and closing angle brackets. This states where the element begins, or starts to take effect.
2. The closing tag: This is the same as the opening tag, except that it includes a forward slash before the element name. This states where the element ends.
3. The content: This is the content of the element, which in this case is just text.
4. The element: The opening tag, the closing tag, and the content together comprise the element.

SLIDE 3.2
Elements can also have attributes, which look like this:
 
Attributes contain extra information about the element that you don't want to appear in the actual content. Here, class is the attribute name, and editor-note is the attribute value. The class attribute allows you to give the element an identifier that can be later used to target the element with style information and other things.
An attribute should always have:
1. A space between it and the element name.
2. The attribute name, followed by an equals sign.
3. Opening and closing quote marks wrapped around the attribute value.

SLIDE 3.3
Anatomy of an HTML document
Now we'll look at how individual elements are combined to form an entire HTML page.
Here we have:
• The <!DOCTYPE html> declaration must be the very first thing in your HTML document, before the <html> tag. The <!DOCTYPE> declaration is not an HTML tag; it is an instruction to the web browser about what version of HTML the page is written in.
• The <html> element wraps all the content on the entire page, and is sometimes known as the root element.
• The <head> element acts as a container for all the stuff you want to include on the HTML page that isn't the content you are showing to your page's viewers. This includes things like keywords and a page description that you want to appear in search results, CSS to style our content, character set declarations, and more.
• <meta charset="utf-8"> — this element sets the character set your document should use to UTF-8, which includes most characters from the vast majority of human written languages. Essentially it can now handle any textual content we might put on it. There is no reason not to set this, and it can help avoid some problems later on.
• The <title> element sets the title of your page, which is the title that appears in the browser tab the page is loaded in. It is also used to describe the page when we bookmark/favourite it.
• The <body> element this contains all the content that we want to show to web users when they visit your page, whether that's text, images, videos, games, playable audio tracks, or whatever else.

SLIDE 4.1
Marking up text
This section will cover some of the basic HTML elements we will use for marking up text.
Headings
Paragraphs
Lists

SLIDE 4.2
Headings
Heading elements allow us to specify that certain parts of your content are headings — or subheadings — of our content. In the same way that a book has a main title, chapter titles and subtitles, an HTML document can too. HTML contains six heading levels:
<h1>My main title</h1>
<h2>My top level heading</h2>
<h3>My subheading</h3>
<h4>My sub-subheading</h4>
<h5>My sub-sub-subheading</h5>
<h6>My sub-sub-sub-subheading</h6>

SLIDE 4.3
Paragraphs
As explained above, <p> elements are for containing paragraphs of text; we will use these frequently when marking up regular text content:
<p>This is a single paragraph</p>

SLIDE 4.4
Lists
A lot of the web's content is lists, and HTML has special elements for these. The most common list types are ordered and unordered lists:
1. Unordered lists are for lists where the order of the items doesn't matter, like a shopping list. These are wrapped in a <ul> element.
2. Ordered lists are for lists where the order of the items does matter, like a recipe. These are wrapped in an <ol> element.
Each item inside the lists is put inside an <li> (list item) element.

SLIDE 5
This is all for today, thank you for your attention.
